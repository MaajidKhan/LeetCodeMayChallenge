MAY 2, 2020.

CHALLENGE 2:
Jewels and Stones
Solution
You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.

The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so "a" is considered a different type of stone from "A".
Example 1:

Input: J = "aA", S = "aAAbbbb"
Output: 3
Example 2:

Input: J = "z", S = "ZZ"
Output: 0
Note:

S and J will consist of letters and have length at most 50.
The characters in J are distinct.
_____________________________________________________________________________________________________________________________________________________________________
// solution Accepted

class Solution {
    public int numJewelsInStones(String J, String S) {
        
        char []arrj = J.toCharArray();
        char []arrs = S.toCharArray();
        int cnt = 0;
        for(int i=0; i< arrs.length; i++)
        {
            for(int j=0; j< arrj.length; j++)
            {
                if(arrs[i] == arrj[j])
                {
                    cnt++;
                    break;
                }
            }
        }
        return cnt;
        
        
    }
}

/*
254 / 254 test cases passed.
Status: Accepted
Runtime: 0 ms
Memory Usage: 37.6 MB
*/
__________________________________________________________________________________________________________________________________________________________________________________
// Solution Accepted

class Solution {
    public int numJewelsInStones(String J, String S) {
        
        char []arrj = J.toCharArray();
        char []arrs = S.toCharArray();
        
        boolean [] store = new boolean [127];  //127 Ascii values we have
        for(char c : arrj)
        {
            store[c] = true; //Here each character is converted into decimal format when indexed
        }
        int cnt = 0;
        
        for(char d : arrs)
        {
            if(store[d])
            {
                cnt++;
            }
        }
        return cnt;
    }
}


/*
254 / 254 test cases passed.
Status: Accepted
Runtime: 0 ms
Memory Usage: 37.5 MB
*/

____________________________________________________________________________________________________________________________________________________________________